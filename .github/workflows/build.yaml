name: build Community Shaders for distribution
on:
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
  workflow_dispatch:
permissions:
  contents: write

env:
  VCPKG_COMMIT_ID: 9edb1b8e590cc086563301d735cae4b6e732d2d2

jobs:
  changes:
    name: what changed?
    runs-on: ubuntu-latest
    outputs:
      plugin: ${{ steps.plugin.outputs.plugin }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 'main'
          filters: |
            features:
              - 'features/**'
            plugin:
              - 'include/**'
              - 'package/**'
              - 'src/**'
      - id: plugin
        run: echo "plugin=${{ steps.filter.outputs.plugin }}" >> "$GITHUB_OUTPUT"

      - name: create a release for this push
        if: steps.filter.outputs.features == 'true' || steps.filter.outputs.plugin == 'true'
        uses: ncipollo/release-action@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref_name }}
          name: Community Shaders ${{ github.ref_name }}
          draft: true
          allowUpdates: true

      - name: create archives for changed features
        id: changed
        if: steps.filter.outputs.features == 'true'
        shell: bash
        run: |
            # steps.filter.ouputs.features_files contains changed files
            mods=$(cut -d/ -f3 ${{ steps.filter.outputs.features_files }})
            cd features
            results=()
            for m in $mods; do
              echo "$m"
              7z a "$m ${{ github.ref_name }}.7z" "$m"
              results+=("$m ${{ github.ref_name }}.7z")
            done
            echo "mods=$results" >> "$GITHUB_OUTPUT"

      - name: upload shader set mod files
        if: steps.filter.outputs.features == 'true'
        uses: ncipollo/release-action@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          artifacts: ${{ steps.changed.outputs.mods }}


  # the windows runners are slow, so we minimize what we run on them
  plugin:
    if: ${{ needs.changes.outputs.plugin }}
    needs: [changes]
    name: build plugin
    runs-on: windows-latest
    steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'true'

        - uses: actions/cache@v3
          with:
              path: |
                  build
              key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}
              restore-keys: |
                ${{ runner.os }}-cmake-
                ${{ runner.os }}-

        - uses: ilammy/msvc-dev-cmd@v1.10.0

        - uses: lukka/run-vcpkg@v11
          with:
              vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

        - name: check the stamp file
          run: cmake -S . --preset=ALL --check-stamp-file "build\CMakeFiles\generate.stamp"

        - name: run cmake to build
          run: cmake --build build --config Release

        - name: copy build artifacts into place
          shell: bash
          run: |
              mkdir -p CommunityShaders/SKSE/Plugins
              cp -p build/release/*.dll CommunityShaders/SKSE/Plugins
              cp -p build/release/*.pdb CommunityShaders/SKSE/Plugins
              cp -rp package/* CommunityShaders/

        - name: 7zip compress it
          run: 7z a "CommunityShaders_${{ github.ref_name }}.7z" ./CommunityShaders

        - name: upload plugin archive
          uses: ncipollo/release-action@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag: ${{ github.ref_name }}
            allowUpdates: true
            omitDraftDuringUpdate: true
            omitNameDuringUpdate: true
            artifacts: "CommunityShaders_${{ github.ref_name }}.7z"
